# If hostname (on the OS) doesn't return a name that can be resolved by the other
# systems in the cluster, you'll have to set the hostname to an IP or something
# that can be resolved here.
# hostname = ""

bind-address = "0.0.0.0"

[logging]
level  = "info"
file   = "stdout"

[admin]
port   = 8083
assets = "./admin"


[api]
port     = 8086

read-timeout = "5s"

[input_plugins]

  [input_plugins.collectd]
  enabled = true
  port = 25826
  database = "collectd"
  # types.db can be found in a collectd installation or on github:
  # https://github.com/collectd/collectd/blob/master/src/types.db
  typesdb = "/config/collectd_types.db" # The path to the collectd types.db file

[raft]
port = 8090
dir  = "/data/raft"

[storage]
dir = "/data/db"
# How many requests to potentially buffer in memory. If the buffer gets filled then writes
# will still be logged and once the local storage has caught up (or compacted) the writes
# will be replayed from the WAL
write-buffer-size = 10000
default-engine = "rocksdb"
max-open-shards = 0
point-batch-size = 100
write-batch-size = 5000000
retention-sweep-period = "10m"

[storage.engines.rocksdb]
max-open-files = 1000
lru-cache-size = "200m"

[storage.engines.leveldb]
max-open-files = 1000
lru-cache-size = "200m"

[cluster]
# A comma separated list of servers to seed
# this server. this is only relevant when the
# server is joining a new cluster. Otherwise
# the server will use the list of known servers
# prior to shutting down. Any server can be pointed to
# as a seed. It will find the Raft leader automatically.

# Here's an example. Note that the port on the host is the same as the raft port.
# seed-servers = ["hosta:8090","hostb:8090"]

protobuf_port = 8099
protobuf_timeout = "2s" # the write timeout on the protobuf conn any duration parseable by time.ParseDuration
protobuf_heartbeat = "200ms" # the heartbeat interval between the servers. must be parseable by time.ParseDuration
protobuf_min_backoff = "1s" # the minimum backoff after a failed heartbeat attempt
protobuf_max_backoff = "10s" # the maxmimum backoff after a failed heartbeat attempt
write-buffer-size = 10000
max-response-buffer-size = 100000
concurrent-shard-query-limit = 20

[sharding]
  replication-factor = 1

  [sharding.short-term]
  duration = "7d"
  split = 2

  [sharding.long-term]
  duration = "60d"
  split = 2

[wal]
dir   = "/data/wal"
flush-after = 1000 # the number of writes after which wal will be flushed, 0 for flushing on every write
bookmark-after = 1000 # the number of writes after which a bookmark will be created
index-after = 1000
requests-per-logfile = 10000
