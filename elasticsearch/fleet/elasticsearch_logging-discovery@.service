[Unit]
Description=Elasticsearch Discovery Service

# Requirements
Requires=etcd.service
Requires=docker.service
Requires=elasticsearch_logging@%i.service

# Dependency ordering
After=etcd.service
After=elasticsearch_logging@%i.service
BindsTo=elasticsearch_logging@%i.service

 
[Service]
# Let processes take awhile to start up (for first run Docker containers)
TimeoutStartSec=0
# keep kill mode, but lets give docker plenty of chances to stop cleanly
TimeoutStopSec=90

# have SystemD restart the service if it goes down
Restart=always
RestartSec=10s

# Get CoreOS environmental variables
EnvironmentFile=/etc/environment

# Pre-start and Start
## Directives with "=-" are allowed to fail without consequence
ExecStartPre=-/usr/bin/docker kill %p-%H
ExecStartPre=-/usr/bin/docker rm %p-%H
ExecStartPre=/usr/bin/docker pull skippy/service_toolkit
ExecStart=/usr/bin/docker run \
    --rm \
    --name %p-%H \
    skippy/service_toolkit watch \
      --label="elasticsearch_logging" \
      --service-id="elasticsearch_logging-%H" \
      --host-ip=${COREOS_PRIVATE_IPV4} \
      --monitor-url="http://${COREOS_PRIVATE_IPV4}:9200" \
      --service-info='{"http_port": 9200, "transport_port": 9300, "name": "elasticsearch_logging-%H"}'

ExecStop=/usr/bin/docker stop -t 10 %p-%H
ExecStop=/usr/bin/docker rm %p-%H


[X-Fleet]
# Schedule on the same machine as the associated hello service
MachineOf=elasticsearch_logging@%i.service

